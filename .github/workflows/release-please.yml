name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json

      - name: Debug Release Please outputs
        run: |
          echo "PR exists: ${{ steps.release.outputs.pr != '' }}"
          echo "Release Created: ${{ steps.release.outputs.release_created }}"
          echo "PR data available: ${{ steps.release.outputs.pr != '' }}"

      - name: Prepare outputs
        id: outputs
        if: steps.release.outputs.pr != ''
        run: |
          PR_DATA='${{ steps.release.outputs.pr }}'
          echo "pr-updated=true" >> "$GITHUB_OUTPUT"
          echo "branch=$(echo "$PR_DATA" | jq -r .headBranchName)" >> "$GITHUB_OUTPUT"
          echo "version=$(echo "$PR_DATA" | jq -r .title | sed 's/.*: release \(.*\)/\1/')" >> "$GITHUB_OUTPUT"

    outputs:
      pr-updated: ${{ steps.outputs.outputs.pr-updated }}
      branch: ${{ steps.outputs.outputs.branch }}
      version: ${{ steps.outputs.outputs.version }}

  antsibull-changelog:
    needs: [release-please]
    if: needs.release-please.outputs.pr-updated

    runs-on: ubuntu-latest
    steps:
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install antsibull-changelog

      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.branch }}

      - name: antsibull-changelog
        run: |
          # Ensure directories exist
          mkdir -p changelogs/fragments

          # Initialize changelog if config doesn't exist
          if [ ! -f changelogs/config.yaml ]; then
            antsibull-changelog init --is-collection no
          fi

          # Generate the release
          # Generate the release
          antsibull-changelog release \
            --version "${{ needs.release-please.outputs.version }}" \
            --codename Initial release \
            --is-collection no

      - name: Check for diff
        id: antsibull-diff
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit & Push
        if: ${{ steps.antsibull-diff.outputs.changed }}
        run: |
          git config user.name "0xafrogeek"
          git config user.email "12378923+0xafrogeek@users.noreply.github.com"

          git add changelogs/CHANGELOG.rst
          git commit -m "chore(main): changelog for version ${{ needs.release-please.outputs.version }}"

          git push --force origin ${{ needs.release-please.outputs.branch }}