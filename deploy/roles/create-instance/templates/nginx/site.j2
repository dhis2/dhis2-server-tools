# WARNING: This file is automatically generated by an Ansible template.
# Any custom modifications made directly to this file will be overwritten
# during future Ansible runs.

# Please place any custom configurations in the following file
# /etc/nginx/custom/{{ fqdn }}.conf 

# configurations within that file will be included in this nginx configuration.

# Let local monitoring agent access stats
server {
  listen 127.0.0.1;
  server_name localhost;
  location /nginx_status {
    stub_status on;
    access_log   off;
    allow 127.0.0.1;
    deny all;
  }
}

# http block
server {
  {%if TLS_TYPE is undefined or TLS_TYPE == 'letsencrypt' -%}
  listen 80;
  server_name {{ hostvars[item]['fqdn'] | trim }};
  return 302 https://$host:{{ https_port | default("$server_port") }}$request_uri;
  {% else %}
  listen {{ http_port | default('80') }};
  server_name {{ hostvars[item]['fqdn'] | trim }};
  return 302 https://$host:{{ https_port | default("$server_port") }}$request_uri;
  {%endif-%}
}

# https block 
server {
  {%if TLS_TYPE is undefined or TLS_TYPE == 'letsencrypt' -%}
  listen 443 ssl;
  server_name {{ hostvars[item]['fqdn'] | trim }};
  # ssl settings 
  ssl_certificate /etc/letsencrypt/live/{{ hostvars[item]['fqdn'] | trim }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ hostvars[item]['fqdn'] | trim }}/privkey.pem;
  {%elif TLS_TYPE is defined and  TLS_TYPE == 'customssl' -%}
  listen {{ https_port | default('443') }} ssl;
  server_name {{ hostvars[item]['fqdn'] | trim }};
  # ssl settings 
  ssl_certificate /etc/ssl/{{ hostvars[item]['fqdn'] | trim }}/customssl.crt;
  ssl_certificate_key /etc/ssl/{{ hostvars[item]['fqdn'] | trim }}/customssl.key;
  {%elif TLS_TYPE is defined and  TLS_TYPE == 'selfsigned' -%}
  listen {{ https_port | default('443') }} ssl;
  server_name {{ hostvars[item]['fqdn'] | trim }};
  # ssl settings 
  ssl_certificate     /etc/ssl/selfsigned/selfsigned.crt;
  ssl_certificate_key /etc/ssl/selfsigned/selfsigned.key;
  {%endif-%}
  ssl_stapling on;
  ssl_stapling_verify  on;

  # please write your custom changes to the static/{{ fqdn }}.conf; and
  # will be kept across subsequent ansible runs 
  include static/{{ fqdn }}.conf;

  # include instance location configs 
{% for instance in groups['instances']  if (hostvars[instance]['fqdn'] is defined) and
(hostvars[instance]['fqdn'] | trim  == hostvars[item]['fqdn'] | trim ) and
'ROOT' not in groups['instances']  | map('extract', hostvars, 'dhis2_base_path') | map('default', 'None') and
(hostvars[instance]['proxy_rewrite'] | default(false) == true or hostvars[instance]['proxy_rewrite'] | default('false') == "true") %}
{% if loop.first %}
  rewrite ^/$ /{{ hostvars[instance]['dhis2_base_path']  | default(instance)| to_fixed_string }}; 
{%endif%}
{%endfor%}

  {% for instance  in groups['instances'] if (hostvars[instance]['fqdn'] is defined) and 
  (hostvars[instance]['fqdn'] | trim == hostvars[item]['fqdn'] | trim ) -%}
    include  conf.d/upstream/{{ instance | to_fixed_string }}.conf;
  {%endfor%}
  # include server  monitoring location configs 
  {% if server_monitoring is defined -%}
  {% set server_monitoring_lower = server_monitoring | lower | trim -%}
  {% if server_monitoring_lower == 'munin' -%}
  include conf.d/upstream/munin.conf;
  {# {% elif server_monitoring_lower == 'grafana' %} #}
  {% elif server_monitoring  in  ['grafana', 'prometheus', 'grafana/prometheus'] -%}
  include conf.d/upstream/grafana.conf;
  {% else %}
  # server_monitoring is defined but doesn't match glowroot or prometheus
  # Add a default include or log a warning if needed
  # Example: include conf.d/upstream/default.conf;
  {% endif %}
  {% else %}
  # server_monitoring is not defined
  # Handle the case where server_monitoring is not set
  # Example: include conf.d/upstream/default.conf;
  {% endif %}

{% for instance  in groups['instances'] if (hostvars[instance]['fqdn'] is defined) and
(hostvars[instance]['fqdn'] | trim  == hostvars[item]['fqdn'] | trim ) and 
'ROOT' not in groups['instances'] | map('extract', hostvars, 'dhis2_base_path') | map('default', 'None') %}
{% if loop.first %}
location / {
  return 444;
  }
{%endif%}
{%endfor%}

  if ($host != "{{ hostvars[item]['fqdn'] | trim }}") {
    return 444;
    }
}
