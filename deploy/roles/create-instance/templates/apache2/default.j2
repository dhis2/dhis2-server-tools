# WARNING: This file is automatically generated by an Ansible template.
# Any custom modifications made directly to this file will be overwritten
# during future Ansible runs.

# Please place any custom configurations in the following file
# /etc/apache2/static/default.conf 

# configurations within that file will be included in this apache2 configuration.

<IfModule mod_ssl.c>
  ServerTokens Prod
  ServerSignature Off
  SSLStaplingCache "shmcb:logs/ssl_staple_cache(512000)"

  # Restrict HTTP Protocol Version to 1.1
  RewriteEngine On
  RewriteCond %{THE_REQUEST} !HTTP/1\.1$
  RewriteRule .* - [F]

  RewriteOptions Inherit

<VirtualHost 127.0.0.1:80>
  # Let local monitoring agent access stats
  <Location /server-status>
      Require all denied
      Require local
  </Location>
</VirtualHost>

<VirtualHost *:80>
       RewriteEngine On
       # Everything else goes to https
       RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
  </VirtualHost>

# Main vhost configuration
  <VirtualHost *:443>

        IncludeOptional static/default.conf 
        #===========================================================
        # Rewrite requests for / to main dhis application
        #===========================================================
        # RewriteRule   ^/$  /dhis/  [R]
{% for instance in groups['instances']  if 'ROOT' not in groups['instances'] |
map('extract', hostvars, 'dhis2_base_path') | map('default', 'None') and
(hostvars[instance]['proxy_rewrite'] | default(false) == true or
hostvars[instance]['proxy_rewrite'] | default('false') == "true") %} 
{% if loop.first %}
        RewriteRule   ^/$  /{{ hostvars[instance]['dhis2_base_path'] | default(instance) }}/ [R]
{%endif%}
{%endfor%}

        #===========================================================
        # standard web server document root for serving content
        # outside of dhis2 webapp
        #===========================================================
        DocumentRoot /var/www/html

        ProxyPreserveHost on
        #===========================================================
        # tomcat backends.  These configs are read from files in
        # <server-root>/upstream directory
        # To add a backend, place a file there with contents like:
        #
        # <Location /test1>
        #  Require all granted
        #  ProxyPass "http://192.168.0.11:8080/test1"
        #  ProxyPassReverse "http://192.168.0.11:8080/test1"
        # </Location>
        #===========================================================

{% for instance  in groups['instances'] if (hostvars[instance]['fqdn'] is undefined) or
        hostvars[instance]['fqdn'] == None or  (not hostvars[instance]['fqdn'] | trim != "") %}
        IncludeOptional  upstream/{{ instance | to_fixed_string }}.conf
{%endfor%}
        IncludeOptional  upstream/munin.conf

        #===========================================================
        # Restrictions on other locations
        #===========================================================
        <Directory />
                Require all denied
		Options None
                AllowOverride None
        </Directory>

        # You need this if you are going to have a landing page
        # Else set "Require all denied" below
        <Directory /var/www/html>
                Require all granted
                Options None
                AllowOverride None
                # Limit HTTP methods to standard methods. Note: Does not limit TRACE
                <LimitExcept GET POST OPTIONS>
                   Require all denied
                </LimitExcept>
        </Directory>

    
       # BrowserMatch "MSIE [2-6]" \
       #          nokeepalive ssl-unclean-shutdown \
       #          downgrade-1.0 force-response-1.0
       # BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

  </VirtualHost>
</IfModule>
