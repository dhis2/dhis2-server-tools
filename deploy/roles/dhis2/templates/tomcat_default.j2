JAVA_OPTS="-Djava.awt.headless=true"
# Set desired HEAP size here.  By default jvm will assume that it can
# use up 25% of the memory it sees.  Better to set explicitly.
# For production instances, set minimum size the same as maximum
{# {% if heap_memory_size is defined  and heap_memory_size |  regex_search('\\d+[G|M|g|m]')) %} #}
{% if heap_memory_size is defined  and heap_memory_size |  regex_search('\d+[GMgm](?!\w)') %}
 JAVA_OPTS="${JAVA_OPTS} -Xmx{{ heap_memory_size }} -Xms{{ heap_memory_size }}"
{% else %}
# JAVA_OPTS="${JAVA_OPTS} -Xmx16G -Xms16G"
{% endif %}

# Mitigating log4j vulnerability
JAVA_OPTS="${JAVA_OPTS} -Dlog4j2.formatMsgNoLookups=true"

# Important to give the jvm a reliable, non-blocking, source of
# randomness.  See eg https://stackoverflow.com/questions/58991966/what-java-security-egd-option-is-for
JAVA_OPTS="${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom"


# Pick a garbage collector
# G1GC should be best, though sometimes heavy on CPU when a lot of GC is
# happening.  Under those circumstances, you might want to try ParallelGC
JAVA_OPTS="${JAVA_OPTS} -XX:+UseG1GC"
#JAVA_OPTS="${JAVA_OPTS} -XX:+UseParallelGC"

# In case of excessive GC requirements you might want to allow GC more time
# to do its work
JAVA_OPTS="${JAVA_OPTS} -XX:MaxGCPauseMillis=1500 -XX:GCTimeRatio=9" 

# In case you want to enable glowroot profiling
{% if app_monitoring is defined and app_monitoring == "glowroot" %}
JAVA_OPTS="${JAVA_OPTS} -javaagent:/opt/glowroot/glowroot.jar"
{% endif %}

{% if zabbix_jmx_monitoring is defined and zabbix_jmx_monitoring | bool %}
JAVA_OPTS="${JAVA_OPTS} -Dcom.sun.management.jmxremote"
JAVA_OPTS="${JAVA_OPTS} -Dcom.sun.management.jmxremote.port=9090"
JAVA_OPTS="${JAVA_OPTS} -Dcom.sun.management.jmxremote.ssl=false"
JAVA_OPTS="${JAVA_OPTS} -Dcom.sun.management.jmxremote.rmi.port=9090"
JAVA_OPTS="${JAVA_OPTS} -Dcom.sun.management.jmxremote.local.only=false"
JAVA_OPTS="${JAVA_OPTS} -Dcom.sun.management.jmxremote.authenticate=false"
JAVA_OPTS="${JAVA_OPTS} -Djava.rmi.server.hostname={{ansible_host}}"
{% endif %}
